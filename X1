local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local LocalPlayer = Players.LocalPlayer

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local Window = Fluent:CreateWindow({
    Title = "Whatever Floats ur Boat",
    SubTitle = "by Unzip Hub",
    TabWidth = 160,
    Size = UDim2.fromOffset(500, 250),
    Acrylic = false,
    Theme = "Amethyst",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
            M = Window:AddTab({ Title = "Main", Icon = "plus" }),
    Main = Window:AddTab({ Title = "Farm", Icon = "plus" }),
    Troll = Window:AddTab({ Title = "Troll", Icon = "plus" })
}


local hy = Tabs.M
hy:AddParagraph({
    Title = "Thanks for using my script!"
})
local HGFJH = Tabs.M:AddSection("Credit")
hy:AddParagraph({
    Title = "discord : @bruh_lolie (solo dev)"
})
local HGFJH = Tabs.M:AddSection("Script")
Tabs.M:AddButton({
    Title = "Run Inf yield",
    Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end
})

-- ================== AUTO FARM CHEST ==================
local ToggleFarm = Tabs.Main:AddToggle("FarmChestToggle", {
    Title = "Auto farm chest", 
    Default = false,
    Callback = function(state)
        if state then
            _G.farm = true
            spawn(function()
                while _G.farm do
                    local chests = workspace:FindFirstChild("Chests")
                    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
                    local hrp = character:WaitForChild("HumanoidRootPart")
                    if chests then
                        for _, chest in ipairs(chests:GetChildren()) do
                            local targetPart
                            if chest:IsA("BasePart") then
                                targetPart = chest
                            elseif chest:IsA("Model") then
                                if chest.PrimaryPart then
                                    targetPart = chest.PrimaryPart
                                else
                                    targetPart = chest:FindFirstChildWhichIsA("BasePart")
                                end
                            end
                            if targetPart then
                                hrp.CFrame = targetPart.CFrame + Vector3.new(0, -20, 0)
                                task.wait(0.3)
                                game:GetService('VirtualInputManager'):SendKeyEvent(true, Enum.KeyCode.Q, false, game)
                            end
                        end
                    end
                    task.wait(0.2)
                end
            end)
        else
            _G.farm = false
        end
    end 
})

-- ================== PART MANAGEMENT ==================
local parts = {}
local function RetainPart(part)
    if part:IsA("BasePart") and not part.Anchored and part:IsDescendantOf(Workspace) then
        if part.Parent == LocalPlayer.Character or part:IsDescendantOf(LocalPlayer.Character) then return false end
        part.CanCollide = false
        return true
    end
    return false
end

local function addPart(part)
    if RetainPart(part) and not table.find(parts, part) then
        table.insert(parts, part)
    end
end

local function removePart(part)
    local idx = table.find(parts, part)
    if idx then table.remove(parts, idx) end
end

for _, part in pairs(Workspace:GetDescendants()) do
    addPart(part)
end

Workspace.DescendantAdded:Connect(addPart)
Workspace.DescendantRemoving:Connect(removePart)

-- ================== PUSH PARTS ==================
local pushEnabled = false
local pushStrength = 1000

RunService.Heartbeat:Connect(function()
    local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    if pushEnabled then
        local centerPos = hrp.Position
        for _, part in pairs(parts) do
            if part.Parent and not part.Anchored then
                local dir = (part.Position - centerPos).Unit
                part.Velocity = dir * pushStrength
            end
        end
    end
end)

-- ================== ORBIT PARTS ==================
local orbitEnabled = false
local orbitSpeed = 2
local orbitConnection
local orbitRadius = 10

local function startOrbit()
    if orbitConnection then return end
    local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    local angle = 0

    orbitConnection = RunService.Heartbeat:Connect(function(dt)
        if not orbitEnabled then return end
        angle = angle + orbitSpeed * dt
        local centerPos = hrp.Position
        for _, part in pairs(parts) do
            if part.Parent and not part.Anchored then
                local dir = (part.Position - centerPos).Unit
                local orbitPos = Vector3.new(
                    centerPos.X + math.cos(angle) * orbitRadius,
                    part.Position.Y,
                    centerPos.Z + math.sin(angle) * orbitRadius
                )
                local moveDir = (orbitPos - part.Position).Unit
                part.Velocity = moveDir * pushStrength
            end
        end
    end)
end

local function stopOrbit()
    if orbitConnection then
        orbitConnection:Disconnect()
        orbitConnection = nil
    end
end

-- ================== UI TOGGLES ==================
Tabs.Troll:AddToggle("PushPartsToggle", {
    Title = "Push boat near you away (op)",
    Default = false,
    Callback = function(state)
        pushEnabled = state
    end
})

Tabs.Troll:AddToggle("OrbitPartsToggle", {
    Title = "Orbit boat near you",
    Default = false,
    Callback = function(state)
        orbitEnabled = state
        if orbitEnabled then
            startOrbit()
        else
            stopOrbit()
        end
    end
})
